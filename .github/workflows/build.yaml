name: Maven Package

on: 
  push:
    branches: []
  pull_request:
    branches:
      - main


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Retrieve git history
      run: |
        git fetch origin +refs/heads/main:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        cache: maven

    - name: Build with Maven
      run: mvn clean install

    - name: Scan with SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST: https://sonarcloud.io
      run: mvn sonar:sonar --file pom.xml -Dsonar.host.url=$SONAR_HOST -Dsonar.token=$SONAR_TOKEN -Dsonar.qualitygate.wait=true

    - name: publish snapshot
      if: ${{ github.event_name == 'push' && github.ref_name != 'main'  }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        BRANCH=$(echo $GITHUB_REF_NAME | tr '[:lower:]' '[:upper:]') && [[ $BRANCH =~ (SK-[0-9]*) ]] && snapshotSuffix=${match/#E/-E}${BASH_REMATCH/#E/-E}
        version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        mvn versions:set -DnewVersion=$version${snapshotSuffix}-SNAPSHOT -f pom.xml
        mvn -s ./jparest_settings.xml -f pom.xml install -B deploy -DsnapshotSuffix=${snapshotSuffix}-SNAPSHOT -DskipTests

    - name: publish package
      if: ${{ github.event_name == 'push' && github.ref_name == 'main'  }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -s ./jparest_settings.xml -f pom.xml install -B org.apache.maven.plugins:maven-deploy-plugin:2.8.2:deploy -DskipTests
        versionExtract=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        sed -i "/^version=/{s|.$|"=$versionExtract"|}" git_tag.sh
